plugins {
    id "java"
    id "org.springframework.boot"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    implementation "ch.qos.logback:logback-classic"
    implementation "org.flywaydb:flyway-core"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "com.google.code.findbugs:jsr305"
    runtimeOnly "org.postgresql:postgresql"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "org.testcontainers:mongodb"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.with {
        encoding = "UTF-8"
    }
}